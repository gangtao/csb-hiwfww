{"version":3,"sources":["src/index.js"],"names":["rxjs","interval","operators","take","map","width","height","it","latency","genData","numbers","dataRange","takeNumbers","pipe","ev","Math","floor","random","Date","now","$","console","log","root","d3","select","append","attr","engine","source","style","text","result","resultValue","stream","total","subscribe","data","i","t","dataPoint","transition","duration","remove","delay","err","error"],"mappings":"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","file":"src.56f5d217.js","sourceRoot":"..","sourcesContent":["import \"./styles.css\";\n\nconst { interval } = rxjs;\nconst { take, map } = rxjs.operators;\n\nconst width = 800; //The size of the canvas\nconst height = 250;\nconst it = 500;\nconst latency = 0;\n\nfunction genData() {\n  const numbers = interval(it);\n  const takeCount = 10000; // how many data to take\n\n  const dataRange = {\n    min: 0,\n    max: 10\n  };\n\n  const dataPoint = function () {\n    return (\n      Math.floor(Math.random() * (dataRange.max - dataRange.min)) +\n      dataRange.min\n    );\n  };\n\n  const takeNumbers = numbers.pipe(\n    take(takeCount),\n    map((ev) => [\n      dataPoint(),\n      ev,\n      Date.now() - Math.floor(Math.random() * latency)\n    ])\n  );\n\n  return takeNumbers;\n}\n\n$(function () {\n  console.log(\"ready!\");\n  const root = d3\n    .select(\"#chart\")\n    .append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n  const engine = root.append(\"g\").attr(\"transform\", \"translate(410,10)\");\n  const source = root.append(\"g\").attr(\"transform\", \"translate(30,60)\");\n\n  source\n    .append(\"text\")\n    .attr(\"x\", 20)\n    .attr(\"y\", 80)\n    .style(\"fill\", \"#8a8a8a\")\n    .text(\"Data Source\")\n    .attr(\"font-size\", \"1em\");\n\n  source\n    .append(\"text\")\n    .attr(\"x\", 400)\n    .attr(\"y\", 80)\n    .style(\"fill\", \"#8a8a8a\")\n    .text(\"Analytic Engine\")\n    .attr(\"font-size\", \"1em\");\n\n  engine\n    .append(\"rect\")\n    .attr(\"x\", 0)\n    .attr(\"y\", 0)\n    .attr(\"width\", 150)\n    .attr(\"height\", 100)\n    .attr(\"rx\", 10)\n    .style(\"fill\", \"#2c2c2c\")\n    .style(\"stroke\", \"#8934d9\")\n    .style(\"stroke-width\", 4);\n\n  const result = engine.append(\"g\").attr(\"transform\", \"translate(70,25)\");\n  const resultValue = result\n    .append(\"text\")\n    .attr(\"x\", 12)\n    .attr(\"y\", 35)\n    .style(\"fill\", \"#d53c97\")\n    .text(\"0\")\n    .attr(\"font-size\", \"1.5em\")\n    .attr(\"font-weight\", \"bold\");\n\n  const stream = genData();\n  let total = 0;\n\n  const runStream = () => {\n    stream.subscribe(\n      ([data, i, t]) => {\n        console.log(data, i, t);\n\n        const dataPoint = source.append(\"g\");\n\n        dataPoint\n          .append(\"circle\")\n          .attr(\"cx\", 40)\n          .attr(\"cy\", 0)\n          .attr(\"r\", 0)\n          .style(\"fill\", \"#d53c97\")\n          .style(\"stroke\", \"#372A3B\")\n          .style(\"stroke-width\", 2)\n          .transition()\n          .duration(1000)\n          .attr(\"r\", 16);\n\n        dataPoint\n          .append(\"text\")\n          .attr(\"x\", 35)\n          .attr(\"y\", 5)\n          .style(\"fill\", \"#2c2c2c\")\n          .text(data)\n          .attr(\"font-size\", \"0em\")\n          .transition()\n          .attr(\"font-size\", \"1.2em\");\n\n        dataPoint\n          .transition()\n          .duration(3000)\n          .attr(\"transform\", \"translate(380,0)\")\n          .remove();\n\n        total += data;\n        resultValue\n          .transition()\n          .delay(3000)\n          .text(\"\" + total);\n\n        const addValue = result\n          .append(\"text\")\n          .attr(\"x\", 2)\n          .attr(\"y\", 0)\n          .style(\"fill\", \"#fff\")\n          .transition()\n          .delay(2500)\n          .text(\"+\" + data)\n          .transition()\n          .attr(\"y\", -20)\n          .transition()\n          .remove();\n\n        const emitValue = result\n          .append(\"text\")\n          .attr(\"x\", 12)\n          .attr(\"y\", 35)\n          .style(\"fill\", \"#d53c97\")\n          .attr(\"font-size\", \"1.5em\")\n          .attr(\"font-weight\", \"bold\")\n          .transition()\n          .delay(3000)\n          .text(\"\" + total)\n          .attr(\"x\", 100)\n          .style(\"fill\", \"#fff\")\n          .transition()\n          .remove();\n      },\n      (err) => {\n        console.error(\"something wrong occurred: \" + err);\n      },\n      () => {\n        console.log(\"done\");\n      }\n    );\n  };\n\n  runStream();\n});\n"]}